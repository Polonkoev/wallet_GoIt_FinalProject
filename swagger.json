{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Wallet API",
    "description": "Final project GoIT 1 team",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://walletproject.onrender.com/" }
  ],
  "tags": [
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Transactions",
      "description": "Transactions endpoints"
    },
    {
      "name": "Categories",
      "description": "Categories endpoints"
    }
  ],
  "paths": {
    "/api/users/": {
      "post": {
        "tags": ["User"],
        "summary": "User registration",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "User login",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/api/users/logout": {
      "get": {
        "tags": ["User"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get transactions",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "List of transactions",
                  "items": { "$ref": "#/components/schemas/Transaction" }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Transactions"],
        "summary": "Add new transactions",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add new transaction",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "List of user's transactions",
                  "items": { "$ref": "#/components/schemas/Transaction" }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },

    "/api/categories/": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get categories",
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "List of categories",
                  "items": { "$ref": "#/components/schemas/Categories" }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Categories"],
        "summary": "Add categories",
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "required": true,
          "description": "New category",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "isExpense": { "type": "boolean" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "List of categories",
                  "items": { "$ref": "#/components/schemas/Categories" }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "format": "name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token",
            "format": "JWT"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "format": "name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },

      "CurrentResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's _id",
            "example": "62496a0a7bcc73d5fda678ec"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "format": "name"
          }
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "isExpense": {
            "type": "boolean",
            "example": false
          },
          "category": {
            "type": "string",
            "description": "Category ID",
            "example": "62496a0a7bcc73d5fda678ec"
          },
          "name": {
            "type": "string",
            "description": "Cetegory name",
            "example": "Salary"
          },
          "amount": {
            "type": "number",
            "example": 10.97
          },
          "comment": {
            "type": "string"
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
